name: Build APK on Pull Request to Prod

on:
  pull_request:
    branches: [prod]
    types: [opened, synchronize, reopened]

permissions:
  contents: write # allow creating/updating Releases & uploading assets
  actions: read # allow pulling marketplace actions
  issues: write
  pull-requests: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-apk:
    name: Build APK
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - name: 📂 Checkout code
        uses: actions/checkout@v3

      - name: 🚀 Cache pub deps
        uses: actions/cache@v3
        with:
          path: ~/.pub-cache
          key: ${{ runner.os }}-pub-${{ hashFiles('**/pubspec.yaml') }}
          restore-keys: ${{ runner.os }}-pub-

      - name: ☕️ Setup Java (Temurin 17)
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "17"

      # Setup Flutter
      - name: 🦋 Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.32.1"
          channel: "stable"
          cache: true

      # Get Flutter dependencies
      - name: 📥 Get dependencies
        run: flutter pub get

      # Extract version from pubspec.yaml
      - name: 📋 Extract version
        id: version
        run: |
          VERSION=$(grep '^version:' pubspec.yaml | sed 's/version: //' | tr -d ' ')
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Extracted version: $VERSION"

      # Setup app signing
      - name: 🔐 Setup app signing
        env:
          KEYSTORE_BASE64: ${{ secrets.KEYSTORE_BASE64 }}
          KEY_PROPERTIES: ${{ secrets.KEY_PROPERTIES }}
        run: |
          # Create keystore from base64
          if [ -n "$KEYSTORE_BASE64" ]; then
            echo "$KEYSTORE_BASE64" | base64 --decode > android/upload-keystore.jks
            echo "✅ Keystore created successfully"
          else
            echo "⚠️ No keystore found in secrets, using debug signing"
          fi

          # Create key.properties file
          if [ -n "$KEY_PROPERTIES" ]; then
            echo "$KEY_PROPERTIES" > android/key.properties
            echo "✅ Key properties created successfully"
          else
            echo "⚠️ No key properties found in secrets, using debug signing"
            # Create a default key.properties that falls back to debug
            cat > android/key.properties << EOF
          storePassword=android
          keyPassword=android
          keyAlias=androiddebugkey
          storeFile=debug.keystore
          EOF
          fi

      # Generate any needed files (if using build_runner)
      - name: 📂 Generate files
        run: |
          if grep -q "build_runner" pubspec.yaml; then
            flutter packages pub run build_runner build --delete-conflicting-outputs
          fi

      # Analyze code
      - name: 🔍 Analyze code
        run: flutter analyze --no-fatal-infos --no-fatal-warnings

      # Run tests (optional - comment out if no tests)
      # - name: 🧪 Run tests
      #   run: flutter test
      #   continue-on-error: true

      # Build APK
      - name: 🏗️ Build signed APK
        run: flutter build apk --release # Get APK file size for release notes

      - name: 📦 Rename APK file
        run: |
          APK_PATH="build/app/outputs/flutter-apk/app-release.apk"
          if [ -f "$APK_PATH" ]; then
            mv "$APK_PATH" "build/app/outputs/flutter-apk/yts-movies-v${{ steps.version.outputs.version }}.apk"
            echo "APK renamed to yts-movies-v${{ steps.version.outputs.version }}.apk"
          else
            echo "APK file not found, skipping rename"
          fi

      - name: 📊 Get APK info
        id: apk_info
        run: |
          # Install bc for calculations
          sudo apt-get update && sudo apt-get install -y bc

          APK_PATH="build/app/outputs/flutter-apk/yts-movies-v${{ steps.version.outputs.version }}.apk"
          if [ -f "$APK_PATH" ]; then
            SIZE_BYTES=$(stat -c%s "$APK_PATH")
            SIZE_MB=$(echo "scale=2; $SIZE_BYTES / 1024 / 1024" | bc)
            echo "size_mb=$SIZE_MB" >> $GITHUB_OUTPUT
            echo "APK size: ${SIZE_MB} MB"
          else
            echo "size_mb=N/A" >> $GITHUB_OUTPUT
            echo "APK file not found"
          fi

      # Create a tag for the release
      - name: 🏷️ Create tag
        id: tag
        run: |
          TAG="v${{ steps.version.outputs.version }}-pr${{ github.event.pull_request.number }}"
          echo "tag=$TAG" >> $GITHUB_OUTPUT
          echo "Created tag: $TAG"      # Create GitHub Release

      - name: 🚀 Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.tag.outputs.tag }}
          name: "YTS Movies v${{ steps.version.outputs.version }} - PR #${{ github.event.pull_request.number }}"
          body: |
            🚀 **YTS Movies APK Build from Pull Request #${{ github.event.pull_request.number }}**

            **📱 App Details:**
            - Version: ${{ steps.version.outputs.version }}
            - Size: ${{ steps.apk_info.outputs.size_mb }} MB
            - Build Type: Release APK
            - Flutter Version: 3.32.1

            **🔐 Signing:**
            ${{ secrets.KEYSTORE_BASE64 && '✅ Signed with release keystore' || '⚠️ Signed with debug keystore' }}

            **📋 Build Info:**
            - Commit: ${{ github.sha }}
            - PR: #${{ github.event.pull_request.number }}
            - Branch: ${{ github.head_ref }}
            - Triggered by: @${{ github.actor }}

            **📥 Installation:**
            Download the APK file below and install it on your Android device. Make sure to enable "Install from unknown sources" in your device settings.

            ---
            *This is a preview build from a pull request. For production releases, check the main releases page.*
          draft: false
          prerelease: true
          files: |
            build/app/outputs/flutter-apk/yts-movies-v${{ steps.version.outputs.version }}.apk
          token: ${{ secrets.GITHUB_TOKEN }} # Add comment to PR with release link

      - name: 💬 Comment PR with Release Link
        if: github.event_name == 'pull_request' && github.event.pull_request.head.repo.full_name == github.repository
        uses: actions/github-script@v7
        with:
          script: |
            const version = '${{ steps.version.outputs.version }}';
            const size = '${{ steps.apk_info.outputs.size_mb }}';
            const tag = '${{ steps.tag.outputs.tag }}';
            const releaseUrl = `https://github.com/${context.repo.owner}/${context.repo.repo}/releases/tag/${tag}`;

            const keystoreUsed = '${{ secrets.KEYSTORE_BASE64 }}' 
              ? '🔐 Signed with release keystore'
              : '⚠️ Signed with debug keystore';

            const comment = `🚀 **APK Build Successful - Release Created!**

            📱 **Download APK:** [${tag} Release](${releaseUrl})
            📊 **Size:** ${size} MB
            ${keystoreUsed}

            **Build Details:**
            - Version: ${version}
            - Commit: ${context.sha.substring(0, 7)}
            - Flutter Version: 3.32.1
            - Build Type: Release APK

            **📥 How to install:**
            1. Click the release link above
            2. Download the APK file
            3. Install on your Android device (enable "Unknown sources" if needed)

            *This is a preview release created from PR #${context.payload.pull_request.number}*`;

            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment,
            });
