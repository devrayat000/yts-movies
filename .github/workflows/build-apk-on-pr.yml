name: Build APK on Pull Request to Prod

on:
  pull_request:
    branches: [prod]
    types: [opened, synchronize, reopened]

permissions:
  contents: write # allow creating/updating Releases & uploading assets
  actions: read # allow pulling marketplace actions
  issues: write
  pull-requests: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-apk:
    name: Build APK
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - name: 📂 Checkout code
        uses: actions/checkout@v3

      - name: 🚀 Cache pub deps
        uses: actions/cache@v3
        with:
          path: ~/.pub-cache
          key: ${{ runner.os }}-pub-${{ hashFiles('**/pubspec.yaml') }}
          restore-keys: ${{ runner.os }}-pub-

      - name: ☕️ Setup Java (Temurin 17)
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "17"

      # Setup Flutter
      - name: 🦋 Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.32.1"
          channel: "stable"
          cache: true
      - run: flutter --version

      # Get Flutter dependencies
      - name: 📥 Get dependencies
        run: flutter pub get

      # Extract version from pubspec.yaml
      - name: 📋 Extract version
        id: version
        run: |
          VERSION=$(grep '^version:' pubspec.yaml | sed 's/version: //' | tr -d ' ')
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Extracted version: $VERSION"

      # Setup app signing
      - name: 🔐 Setup app signing
        env:
          KEYSTORE_BASE64: ${{ secrets.KEYSTORE_BASE64 }}
          KEY_PROPERTIES: ${{ secrets.KEY_PROPERTIES }}
        run: |
          # Create keystore from base64
          if [ -n "$KEYSTORE_BASE64" ]; then
            echo "$KEYSTORE_BASE64" | base64 --decode > android/upload-keystore.jks
            echo "✅ Keystore created successfully"
          else
            echo "⚠️ No keystore found in secrets, using debug signing"
          fi

          # Create key.properties file
          if [ -n "$KEY_PROPERTIES" ]; then
            echo "$KEY_PROPERTIES" > android/key.properties
            echo "✅ Key properties created successfully"
          else
            echo "⚠️ No key properties found in secrets, using debug signing"
            # Create a default key.properties that falls back to debug
            cat > android/key.properties << EOF
          storePassword=android
          keyPassword=android
          keyAlias=androiddebugkey
          storeFile=debug.keystore
          EOF
          fi

      # Generate any needed files (if using build_runner)
      - name: 📂 Generate files
        run: |
          if grep -q "build_runner" pubspec.yaml; then
            flutter packages pub run build_runner build --delete-conflicting-outputs
          fi

      # Analyze code
      - name: 🔍 Analyze code
        run: flutter analyze --no-fatal-infos --no-fatal-warnings

      # Run tests (optional - comment out if no tests)
      # - name: 🧪 Run tests
      #   run: flutter test
      #   continue-on-error: true

      # Build APK
      - name: 🏗️ Build signed APK
        run: flutter build apk --release

      # Upload APK as artifact
      - name: 📦 Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: ytsmovies-v${{ steps.version.outputs.version }}-pr${{ github.event.pull_request.number }}
          path: build/app/outputs/flutter-apk/app-release.apk
          retention-days: 30

      # Add comment to PR with download link
      - name: 💬 Comment PR
        if: github.event_name == 'pull_request' && github.event.pull_request.head.repo.full_name == github.repository
        uses: actions/github-script@v7
        env:
          KEYSTORE_BASE64: ${{ secrets.KEYSTORE_BASE64 }}
        with:
          script: |
            const fs = require('fs');
            const apkPath = 'build/app/outputs/flutter-apk/app-release.apk';
            let fileSizeInMB = 'N/A';
            try {
              const stats = fs.statSync(apkPath);
              fileSizeInMB = (stats.size / (1024 * 1024)).toFixed(2);
            } catch (e) {
              fileSizeInMB = 'Not found';
            }

            // Keystore info
            const keystoreUsed = process.env.KEYSTORE_BASE64
              ? '🔐 Signed with release keystore'
              : '⚠️ Signed with debug keystore';

            // Get version info from the outputs or set as 'Unknown'
            const version = process.env.VERSION || 'Unknown';

            // Compose comment
            const comment = `🚀 **APK Build Successful!**

            📱 **Download:** The APK has been built successfully and is available as an artifact.
            📊 **Size:** ${fileSizeInMB} MB
            🔗 **Download Link:** Check the "Artifacts" section in the workflow run details.
            ${keystoreUsed}

            **Build Details:**
            - Version: ${version}
            - Commit: ${process.env.GITHUB_SHA.substring(0, 7)}
            - Flutter Version: 3.32.1
            - Build Type: Release APK

            To download the APK:
            1. Go to the "Actions" tab
            2. Click on this workflow run
            3. Download the artifact named "ytsmovies-v${version}-pr${context.payload.pull_request.number}"`;

            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment,
            });
